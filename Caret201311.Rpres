<style type="text/css"> 
.reveal section code{ 
  font-size: 100%; 
} 
.reveal section code.r{ 
  font-size: 125%; 
} 
.reveal .state-background {background: lightgrey;}
</style>


The Caret Package
========================================================
author: Syrus Nemat-Nasser (R [at] syrus [dot] us)
date: November 19, 2013
width: 1200
height: 700
autosize: true

&nbsp;

https://github.com/Syrus/201311

```{r include=FALSE}
library(knitr)
opts_chunk$set(fig.path='figure/caret-', dev='png', fig.width=8, fig.height=4, dpi=200)
opts_chunk$set(cache=TRUE)
options(width=100)
```


The Caret Package for R
========================================================

*Classification And REgression Training*

&nbsp;

Caret was created by Max Kuhn
- http://cran.r-project.org/web/packages/caret/
- http://caret.r-forge.r-project.org/
- http://appliedpredictivemodeling.com/

&nbsp;
```{r eval=FALSE}
install.packages("caret", dependencies=c("Depends", "Suggests"))
```

Regression
========================================================

<center>
**Ideal Problem**

${\bf y} = {\bf r}({\bf x}) + \bf{\epsilon}$

${\bf x} \in \mathbb{R}^n$

${\bf y} \in \mathbb{R}^m$
</center>
*****
<center>
**Prediction**

${\bf h}({\bf x}) \in \mathbb{R}^m$

${\bf h}({\bf x}) \simeq {\bf r}({\bf x})$

</center>

Caret Features
========================================================

&nbsp;

- Pre-Processing

- Data Splitting

- Model Training and Tuning

- Visualizations

- Variable Importance

- Feature Selection

- Parallel Processing

Example Data 1: earth::data(titanic)
========================================================
```{r}
library(earth)
data(etitanic)
etitanic$survived = as.logical(etitanic$survived)
str(etitanic)
summary(etitanic)
```

Example Data 2: UCI HAR Data
========================================================


========================================================

Caret Function       | Description
---------------------|-------------------
**dummyVars**        | Generate dummy variables from factors
**nearZeroVar**      | Identify variables with low variance
**findCorrelation**  | Identify highly correlated variables
**findLinearCombos** | Enumerate sets of linear combinations
**preProcess**       | Centering and scaling; PCA; ICA; missing value imputation
**classDist**        | Generate predictor variables from the distance to class centroids

Slide With Plot
========================================================

```{r, echo=FALSE}
qplot(data=cars, speed, dist)
```
